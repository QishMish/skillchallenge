version: "3.8"
services:
  authPg:
    image: postgres:latest
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: skillchallenge
    volumes:
      - auth_pg_data:/var/lib/postgresql/data
  mediaPg:
    image: postgres:latest
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: skillchallenge_media
    volumes:
      - media_pg_data:/var/lib/postgresql/data
  skilltestPg:
    image: postgres:latest
    ports:
      - "5435:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: skillchallenge_skilltest
    volumes:
      - skilltest_pg_data:/var/lib/postgresql/data
  rabbitmq:
    image: rabbitmq:3.9.10-management
    container_name: "rabbitmq"
    ports:
      - 5672:5672
      - 15672:15672
    # volumes:
    #   - rabbit_data:/var/lib/rabbitmq/
    #   - rabbit_data:/var/log/rabbitmq/
  redis:
    image: redis:7-alpine
    ports:
      - 6380:6379
  auth:
    build:
      context: ./
      dockerfile: apps/auth/Dockerfile
    command: npm run start:dev auth
    volumes:
      - .:/usr/src/auth
      - /usr/src/auth/node_modules
    ports:
      - "3001:3001"
    depends_on:
      - authPg
      - mailer
      - rabbitmq
    env_file:
      - "apps/auth/.env"
    links:
      - rabbitmq
    environment:
      - RABBIT_MQ_URI=amqp://rabbitmq:5672
  mailer:
    build:
      context: ./
      dockerfile: apps/mailer/Dockerfile
    command: npm run start:dev mailer
    volumes:
      - .:/usr/src/mailer
      - /usr/src/auth/node_modules
    ports:
      - "3002:3002"
    depends_on:
      - rabbitmq
    env_file:
      - "apps/mailer/.env"
    links:
      - rabbitmq
    environment:
      - RABBIT_MQ_URI=amqp://rabbitmq:5672
  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
      - "433:433"
    depends_on:
      - mailer
      - token
      - auth
      - media
  api-gateway:
    build:
      context: ./
      dockerfile: apps/api-gateway/Dockerfile
    command: npm run start:dev api-gateway
    volumes:
      - .:/usr/src/api-gateway
      - /usr/src/api-gateway/node_modules
    ports:
      - "5000:5000"
    depends_on:
      - rabbitmq
    env_file:
      - "apps/api-gateway/.env"
    links:
      - rabbitmq
      - mailer
      - auth
    environment:
      - RABBIT_MQ_URI=amqp://rabbitmq:5672
  token:
    build:
      context: ./
      dockerfile: apps/token/Dockerfile
    command: npm run start:dev token
    volumes:
      - .:/usr/src/token
      - /usr/src/token/node_modules
    ports:
      - "3004:3004"
    depends_on:
      - rabbitmq
    env_file:
      - "apps/token/.env"
    links:
      - rabbitmq
    environment:
      - RABBIT_MQ_URI=amqp://rabbitmq:5672
  media:
    build:
      context: ./
      dockerfile: apps/media/Dockerfile
    command: npm run start:dev media
    volumes:
      - .:/usr/src/media
      - /usr/src/media/node_modules
    ports:
      - "3006:3006"
    depends_on:
      - mediaPg
      - rabbitmq
    env_file:
      - "apps/media/.env"
    links:
      - rabbitmq
    environment:
      - RABBIT_MQ_URI=amqp://rabbitmq:5672
  skilltest:
    build:
      context: ./
      dockerfile: apps/skill-test/Dockerfile
    command: npm run start:dev skill-test
    volumes:
      - .:/usr/src/skill-test
      - /usr/src/skilltest/node_modules
    ports:
      - "3007:3007"
    depends_on:
      - skilltestPg
      - auth
      - rabbitmq
    env_file:
      - "apps/skill-test/.env"
    links:
      - rabbitmq
    environment:
      - RABBIT_MQ_URI=amqp://rabbitmq:5672
# networks:
#   backend:
#     driver: bridge
volumes:
  auth_pg_data:
  media_pg_data:
  skilltest_pg_data:
  rabbit_data:
    driver: local
  mongo_data:
    driver: local
